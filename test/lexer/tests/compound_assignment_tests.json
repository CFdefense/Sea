[
    {
        "test_name": "Basic Compound Assignment Operators",
        "description": "Test basic compound assignment operators",
        "code": "+= -= *= /=",
        "result": [
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="}
        ]
    },
    {
        "test_name": "Compound Assignment with Variables",
        "description": "Test compound assignment operators with variables",
        "code": "x += 5 y -= 3 z *= 2 w /= 4",
        "result": [
            {"type": "T_IDENTIFIER", "content": "x"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "5"},
            {"type": "T_IDENTIFIER", "content": "y"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "3"},
            {"type": "T_IDENTIFIER", "content": "z"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "2"},
            {"type": "T_IDENTIFIER", "content": "w"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "4"}
        ]
    },
    {
        "test_name": "Compound Assignment in Expressions",
        "description": "Test compound assignment operators in complex expressions",
        "code": "sum += arr[i] total -= value count *= factor result /= divisor",
        "result": [
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "arr"},
            {"type": "T_OPENING_BRACKET", "content": "["},
            {"type": "T_IDENTIFIER", "content": "i"},
            {"type": "T_CLOSING_BRACKET", "content": "]"},
            {"type": "T_IDENTIFIER", "content": "total"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "value"},
            {"type": "T_IDENTIFIER", "content": "count"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "factor"},
            {"type": "T_IDENTIFIER", "content": "result"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "divisor"}
        ]
    },
    {
        "test_name": "Compound Assignment with Parentheses",
        "description": "Test compound assignment operators with parenthesized expressions",
        "code": "x += (a + b) y -= (c - d) z *= (e * f) w /= (g / h)",
        "result": [
            {"type": "T_IDENTIFIER", "content": "x"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_IDENTIFIER", "content": "a"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_IDENTIFIER", "content": "b"},
            {"type": "T_CLOSING_PAREN", "content": ")"},
            {"type": "T_IDENTIFIER", "content": "y"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_IDENTIFIER", "content": "c"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_IDENTIFIER", "content": "d"},
            {"type": "T_CLOSING_PAREN", "content": ")"},
            {"type": "T_IDENTIFIER", "content": "z"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_IDENTIFIER", "content": "e"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_IDENTIFIER", "content": "f"},
            {"type": "T_CLOSING_PAREN", "content": ")"},
            {"type": "T_IDENTIFIER", "content": "w"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_IDENTIFIER", "content": "g"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_IDENTIFIER", "content": "h"},
            {"type": "T_CLOSING_PAREN", "content": ")"}
        ]
    },
    {
        "test_name": "Compound Assignment with Function Calls",
        "description": "Test compound assignment operators with function calls",
        "code": "sum += calculate(x) total -= get_value() count *= compute_factor() result /= find_divisor()",
        "result": [
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "calculate"},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_IDENTIFIER", "content": "x"},
            {"type": "T_CLOSING_PAREN", "content": ")"},
            {"type": "T_IDENTIFIER", "content": "total"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "get_value"},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_CLOSING_PAREN", "content": ")"},
            {"type": "T_IDENTIFIER", "content": "count"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "compute_factor"},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_CLOSING_PAREN", "content": ")"},
            {"type": "T_IDENTIFIER", "content": "result"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "find_divisor"},
            {"type": "T_OPENING_PAREN", "content": "("},
            {"type": "T_CLOSING_PAREN", "content": ")"}
        ]
    },
    {
        "test_name": "Compound Assignment Edge Cases",
        "description": "Test edge cases for compound assignment operators",
        "code": "a+=b c-=d e*=f g/=h",
        "result": [
            {"type": "T_IDENTIFIER", "content": "a"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "b"},
            {"type": "T_IDENTIFIER", "content": "c"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "d"},
            {"type": "T_IDENTIFIER", "content": "e"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "f"},
            {"type": "T_IDENTIFIER", "content": "g"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_IDENTIFIER", "content": "h"}
        ]
    },
    {
        "test_name": "Compound Assignment with Numbers",
        "description": "Test compound assignment operators with numeric literals",
        "code": "x += 42 y -= 17 z *= 8 w /= 3",
        "result": [
            {"type": "T_IDENTIFIER", "content": "x"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "42"},
            {"type": "T_IDENTIFIER", "content": "y"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "17"},
            {"type": "T_IDENTIFIER", "content": "z"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "8"},
            {"type": "T_IDENTIFIER", "content": "w"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "3"}
        ]
    },
    {
        "test_name": "Compound Assignment in Statements",
        "description": "Test compound assignment operators in complete statements",
        "code": "int sum = 0; sum += 5; sum -= 2; sum *= 3; sum /= 2;",
        "result": [
            {"type": "T_INT_TYPE", "content": "int"},
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "0"},
            {"type": "T_SEMICOLON", "content": ";"},
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_PLUS", "content": "+"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "5"},
            {"type": "T_SEMICOLON", "content": ";"},
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_MINUS", "content": "-"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "2"},
            {"type": "T_SEMICOLON", "content": ";"},
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_MULTIPLY", "content": "*"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "3"},
            {"type": "T_SEMICOLON", "content": ";"},
            {"type": "T_IDENTIFIER", "content": "sum"},
            {"type": "T_DIVIDE", "content": "/"},
            {"type": "T_ASSIGN", "content": "="},
            {"type": "T_INT_LITERAL", "content": "2"},
            {"type": "T_SEMICOLON", "content": ";"}
        ]
    }
] 